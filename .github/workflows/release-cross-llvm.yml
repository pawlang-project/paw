name: Release with Cross-Compilation LLVM Support

# This workflow attempts to build cross-compiled binaries with LLVM support
# using Docker/QEMU to run native builds for target architectures

on:
  workflow_dispatch:  # Manual trigger only for testing

permissions:
  contents: write

jobs:
  build-linux-armv7-native:
    name: Build Linux ARM32 (Native in QEMU)
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm
      
      - name: Build in ARM container with LLVM
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: armv7
          distro: ubuntu22.04
          
          # Install dependencies in the container
          install: |
            apt-get update -q -y
            apt-get install -q -y wget curl xz-utils
            
            # Install Zig 0.15.1
            wget https://ziglang.org/download/0.15.1/zig-linux-armv7a-0.15.1.tar.xz
            tar -xf zig-linux-armv7a-0.15.1.tar.xz
            export PATH=$PWD/zig-linux-armv7a-0.15.1:$PATH
            
            # Install LLVM 19 (native ARM)
            wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
            echo "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main" | tee /etc/apt/sources.list.d/llvm.list
            apt-get update
            apt-get install -y llvm-19 llvm-19-dev clang-19 libc++-19-dev libc++abi-19-dev
          
          # Build PawLang
          run: |
            export PATH=$PWD/zig-linux-armv7a-0.15.1:$PATH
            zig build
            
            # Create package
            mkdir -p pawlang
            cp -r zig-out/bin pawlang/
            cp -r zig-out/lib pawlang/
            cp -r examples pawlang/
            cp README.md LICENSE pawlang/
            
            tar -czf pawlang-linux-armv7-llvm.tar.gz pawlang
            
            echo "✅ ARM binary with LLVM backend created!"
      
      - name: Check if LLVM is included
        run: |
          tar -tzf pawlang-linux-armv7-llvm.tar.gz | grep -E "(pawc|LLVM|\.so)" | head -20
          echo ""
          echo "Package size:"
          ls -lh pawlang-linux-armv7-llvm.tar.gz

  build-linux-x86-native:
    name: Build Linux i386 (Native in Docker)
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 386
      
      - name: Build in i386 container with LLVM
        uses: addnab/docker-run-action@v3
        with:
          image: i386/ubuntu:22.04
          options: -v ${{ github.workspace }}:/workspace
          run: |
            cd /workspace
            
            # Install dependencies
            apt-get update
            apt-get install -y wget curl xz-utils
            
            # Install Zig 0.15.1 for i386
            wget https://ziglang.org/download/0.15.1/zig-linux-x86-0.15.1.tar.xz
            tar -xf zig-linux-x86-0.15.1.tar.xz
            export PATH=$PWD/zig-linux-x86-0.15.1:$PATH
            
            # Install LLVM 19 (native i386)
            wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
            echo "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main" | tee /etc/apt/sources.list.d/llvm.list
            apt-get update
            apt-get install -y llvm-19 llvm-19-dev clang-19 libc++-19-dev libc++abi-19-dev || echo "i386 LLVM not available"
            
            # Build PawLang
            zig build
            
            # Create package
            mkdir -p pawlang
            cp -r zig-out/bin pawlang/
            cp -r zig-out/lib pawlang/ 2>/dev/null || true
            cp -r examples pawlang/
            cp README.md LICENSE pawlang/
            
            tar -czf pawlang-linux-x86-llvm.tar.gz pawlang
            
            echo "✅ i386 binary with LLVM backend created!"
      
      - name: Check if LLVM is included
        run: |
          tar -tzf pawlang-linux-x86-llvm.tar.gz | grep -E "(pawc|LLVM|\.so)" | head -20
          echo ""
          echo "Package size:"
          ls -lh pawlang-linux-x86-llvm.tar.gz

  summary:
    name: Cross-Compilation with LLVM Summary
    needs: [build-linux-armv7-native, build-linux-x86-native]
    runs-on: ubuntu-latest
    steps:
      - name: Results
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "🎉 Cross-Compilation with LLVM Support Test Complete!"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          echo "✅ Successfully built:"
          echo "   • Linux armv7 with LLVM backend (native in QEMU)"
          echo "   • Linux x86 with LLVM backend (native in Docker)"
          echo ""
          echo "🎯 This proves cross-arch binaries CAN include LLVM!"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

