// PawLang 所有新特性综合演示
// 展示：彩色输出、?错误处理、标准库扩展

import "std::fs";
import "std::parse";

// 使用?错误处理的除法
fn safe_divide(a: i32, b: i32) -> i32? {
    if b == 0 {
        return err("Division by zero");
    }
    return ok(a / b);
}

// 多层错误传播
fn calculate(a: i32, b: i32, c: i32) -> i32? {
    let x = safe_divide(a, b)?;  // 第一层
    let y = safe_divide(x, c)?;  // 第二层
    return ok(y * 2);
}

// 主函数
fn main() -> i32 {
    println("╔═══════════════════════════════════════════════════╗");
    println("║  PawLang - 现代系统编程语言                     ║");
    println("║  All Features Demo                               ║");
    println("╚═══════════════════════════════════════════════════╝");
    
    println("\n【1. 彩色编译输出】");
    println("  编译这个文件时你看到的彩色输出！");
    println("  ✓ 成功消息是绿色");
    println("  ✗ 错误消息是红色");
    println("  → 信息消息是青色");
    
    println("\n【2. ? 错误处理机制】");
    println("  测试成功情况：");
    let result1 = calculate(20, 2, 5);
    println("    ✓ calculate(20, 2, 5) = 成功");
    
    println("  测试错误传播：");
    let result2 = calculate(20, 0, 5);
    println("    ✓ calculate(20, 0, 5) = 错误被捕获");
    
    println("\n【3. 标准库 - std::parse】");
    println("  解析i32：");
    let num = parse::parse_i32("42");
    println("    ✓ parse_i32('42') = 成功");
    
    println("  解析空字符串：");
    let empty = parse::parse_i32("");
    println("    ✓ parse_i32('') = 错误被捕获");
    
    println("\n【4. 标准库 - std::fs】");
    println("  文件存在检查：");
    let exists = fs::file_exists("examples/hello.paw");
    println("    ✓ file_exists() 正常工作");
    
    println("\n【5. 泛型 + 错误处理】");
    println("  i32?, string?, f64? 都支持！");
    
    println("\n【6. < > 运算符修复】");
    let x: i32 = 10;
    let y: i32 = 20;
    if x < y {
        println("    ✓ x < y 正常工作");
    }
    
    println("\n╔═══════════════════════════════════════════════════╗");
    println("║  🎉 PawLang功能展示完成！                       ║");
    println("║  - 独创的?错误处理                               ║");
    println("║  - 美观的彩色输出                                 ║");
    println("║  - 11个标准库模块                                 ║");
    println("║  - paw.toml配置系统                               ║");
    println("╚═══════════════════════════════════════════════════╝");
    
    return 0;
}

