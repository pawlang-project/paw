// PawLang新特性演示
// 展示：索引字面量、数组初始化、if表达式

fn test_array_literal() -> i32 {
    // 数组字面量初始化（已修复）
    let numbers: [i32; 5] = [10, 20, 30, 40, 50];
    return numbers[0] + numbers[4];  // 10 + 50 = 60
}

fn test_array_modify() -> i32 {
    // 索引字面量赋值（已修复）
    let mut arr: [i32; 3] = [1, 2, 3];
    arr[0] = 100;  // 索引字面量！
    arr[1] = 200;  // 索引字面量！
    arr[2] = 300;  // 索引字面量！
    return arr[0] + arr[1] + arr[2];  // 600
}

fn test_if_expr() -> i32 {
    // if表达式（新功能）
    let a: i32 = 10;
    let b: i32 = 20;
    let max: i32 = if a > b { a } else { b };  // 20
    let min: i32 = if a < b { a } else { b };  // 10
    return max + min;  // 30
}

fn test_combined() -> i32 {
    // 组合使用：数组 + if表达式
    let mut scores: [i32; 3] = [85, 90, 78];
    
    // 使用if表达式调整分数
    let bonus: i32 = 5;
    scores[0] = scores[0] + (if scores[0] < 90 { bonus } else { 0 });  // 85 + 5 = 90
    scores[1] = scores[1] + (if scores[1] < 90 { bonus } else { 0 });  // 90 + 0 = 90
    scores[2] = scores[2] + (if scores[2] < 90 { bonus } else { 0 });  // 78 + 5 = 83
    
    return scores[0] + scores[1] + scores[2];  // 90 + 90 + 83 = 263
}

fn main() -> i32 {
    let r1: i32 = test_array_literal();  // 60
    let r2: i32 = test_array_modify();   // 600
    let r3: i32 = test_if_expr();        // 30
    let r4: i32 = test_combined();       // 263
    
    return r1 + r2 + r3 + r4;  // 60 + 600 + 30 + 263 = 953
}

