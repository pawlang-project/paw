// 🆕 v0.1.7: 循环密集型性能基准测试

// 嵌套循环求和
fn nested_loop_sum(n: i32) -> i32 {
    let mut total = 0;
    
    loop i in 1..n {
        loop j in 1..n {
            total = total + i * j;
        }
    }
    
    return total;
}

// 数组操作模拟
fn array_operations(size: i32) -> i32 {
    let mut sum = 0;
    let mut i = 0;
    
    loop i < size {
        let mut j = 0;
        loop j < size {
            sum = sum + (i + j);
            j = j + 1;
        }
        i = i + 1;
    }
    
    return sum;
}

// 算术密集型
fn arithmetic_intensive(n: i32) -> i32 {
    let mut result = 0;
    
    loop i in 1..n {
        result = result + i * i;
        result = result - i / 2;
        result = result + (i + 1) * (i - 1);
    }
    
    return result;
}

fn main() -> i32 {
    let n = 100;
    
    let r1 = nested_loop_sum(n);
    let r2 = array_operations(n);
    let r3 = arithmetic_intensive(n);
    
    // 返回结果的模运算，避免溢出
    return (r1 + r2 + r3) % 255;
}

