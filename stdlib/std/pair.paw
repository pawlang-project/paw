// std::pair - 泛型键值对

pub type Pair<K, V> = struct {
    first: K,
    second: V,
}

// 创建Pair
pub fn new<K, V>(k: K, v: V) -> Pair<K, V> {
    return Pair<K, V> { first: k, second: v };
}

// 获取first
pub fn first<K, V>(pair: Pair<K, V>) -> K {
    return pair.first;
}

// 获取second
pub fn second<K, V>(pair: Pair<K, V>) -> V {
    return pair.second;
}

// 交换first和second
pub fn swap<K, V>(pair: Pair<K, V>) -> Pair<V, K> {
    return Pair<V, K> { first: pair.second, second: pair.first };
}
