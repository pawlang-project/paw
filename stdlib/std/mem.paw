// std::mem - 内存管理
// 提供动态内存分配和管理

// ========== C标准库函数声明 ==========

extern "C" fn malloc(size: i64) -> string;
extern "C" fn calloc(count: i64, size: i64) -> string;
extern "C" fn realloc(ptr: string, size: i64) -> string;
extern "C" fn free(ptr: string);
extern "C" fn memset(ptr: string, value: i32, size: i64) -> string;
extern "C" fn memcpy(dest: string, src: string, size: i64) -> string;

// ========== 内存分配 ==========

// 分配内存
pub fn alloc(size: i64) -> string {
    return malloc(size);
}

// 分配并清零
pub fn alloc_zero(size: i64) -> string {
    let one: i64 = 1;
    return calloc(size, one);
}

// 重新分配
pub fn realloc(ptr: string, new_size: i64) -> string {
    return realloc(ptr, new_size);
}

// 释放内存
pub fn free(ptr: string) {
    free(ptr);
}

// ========== 内存操作 ==========

// 内存设置
pub fn set(ptr: string, value: i32, size: i64) -> string {
    return memset(ptr, value, size);
}

// 内存复制
pub fn copy(dest: string, src: string, size: i64) -> string {
    return memcpy(dest, src, size);
}
